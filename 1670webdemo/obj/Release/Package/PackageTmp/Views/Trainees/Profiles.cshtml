@model _1670webdemo.Models.Trainee

@{
    ViewBag.Title = "Profiles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{ if (HttpContext.Current.Session["Username"] == null)
    {
        Response.Redirect("~/Accounts/Login");
    }
    else
    {
        if (HttpContext.Current.Session["AccountType"].ToString() == "Trainee")
        {

        }
        else
        {
            Response.Redirect("~/Home/Index");
        }
    }
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="item form-group">
        <div class="col-md-12">
            @Html.LabelFor(model => model.TraineeID, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.TraineeID, new { htmlAttributes = new { @class = "form-control", Readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TraineeID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="item form-group">
        <div class="col-md-12">
            @Html.LabelFor(model => model.Username, "Username", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", Readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="item form-group">
        <div class="col-md-12">
            @Html.LabelFor(model => model.TraineeName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.TraineeName, new { htmlAttributes = new { @class = "form-control", Readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TraineeName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="item form-group">
        <div class="col-md-12">
            @Html.LabelFor(model => model.TraineeAge, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.TraineeAge, new { htmlAttributes = new { @class = "form-control", Readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TraineeAge, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="item form-group">
        <div class="col-md-12">
            @Html.LabelFor(model => model.TraineeEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.TraineeEmail, new { htmlAttributes = new { @class = "form-control", Readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TraineeEmail, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="item form-group">
        <div class="col-md-12">
            @Html.LabelFor(model => model.TraineeDoB, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.TraineeDoB, new { htmlAttributes = new { @class = "form-control", Readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TraineeDoB, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="item form-group">
        <div class="col-md-12">
            @Html.LabelFor(model => model.TraineeEdu, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.TraineeEdu, new { htmlAttributes = new { @class = "form-control", Readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TraineeEdu, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="ln_solid"></div>
    <div class="item form-group">
        <div>
            <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Home</a>
        </div>
    </div>
}